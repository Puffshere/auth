{"ast":null,"code":"import _classCallCheck from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shawntaylor/projects/auth/src/components/getMockData.js\";\nimport React, { Component } from 'react';\nimport Example1 from './Example1';\n\nvar GetMockData = /*#__PURE__*/function (_Component) {\n  _inherits(GetMockData, _Component);\n\n  function GetMockData(props) {\n    var _this;\n\n    _classCallCheck(this, GetMockData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetMockData).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(GetMockData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // I will use fake api from jsonplaceholder website\n      // this return 100 posts \n      fetch(\"../data/mockData\").then(function (response) {\n        return response.json();\n      }).then( // handle the result\n      function (result) {\n        _this2.setState({\n          isLoaded: true,\n          posts: result\n        });\n      }, // Handle error \n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          posts = _this$state.posts;\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 24\n          }\n        }, \"Error in loading\");\n      } else if (!isLoaded) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 24\n          }\n        }, \"Loading ...\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"ol\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, posts.map(function (post) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: post.id,\n            align: \"start\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 41\n            }\n          }, post.brand), /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 41\n            }\n          }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 41\n            }\n          }, post.body)));\n        })));\n      }\n    }\n  }]);\n\n  return GetMockData;\n}(Component);\n\nexport default GetMockData;","map":{"version":3,"sources":["/Users/shawntaylor/projects/auth/src/components/getMockData.js"],"names":["React","Component","Example1","GetMockData","props","state","error","isLoaded","posts","fetch","then","response","json","result","setState","map","post","id","brand","title","body"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,W;;;AACF,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,IADC;AAETC,MAAAA,QAAQ,EAAG,KAFF;AAGTC,MAAAA,KAAK,EAAG;AAHC,KAAb;AAFc;AAOjB;;;;wCAEmB;AAAA;;AAChB;AACA;AACAC,MAAAA,KAAK,CAAC,kBAAD,CAAL,CACCC,IADD,CACO,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADf,EAECF,IAFD,EAGI;AACA,gBAACG,MAAD,EAAY;AACR,QAAA,MAAI,CAACC,QAAL,CAAc;AACVP,UAAAA,QAAQ,EAAG,IADD;AAEVC,UAAAA,KAAK,EAAGK;AAFE,SAAd;AAIH,OATL,EAWI;AACA,gBAACP,KAAD,EAAW;AACP,QAAA,MAAI,CAACQ,QAAL,CAAc;AACVP,UAAAA,QAAQ,EAAE,IADA;AAEVD,UAAAA,KAAK,EAALA;AAFU,SAAd;AAIH,OAjBL;AAmBC;;;6BAEQ;AAAA;;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACEC,KADF,eACEA,KADF;AAAA,UACSC,QADT,eACSA,QADT;AAAA,UACmBC,KADnB,eACmBA,KADnB;;AAGL,UAAGF,KAAH,EAAS;AACL,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,OAFD,MAEM,IAAI,CAACC,QAAL,EAAe;AACjB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH,OAFK,MAED;AACD,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEIC,KAAK,CAACO,GAAN,CAAU,UAAAC,IAAI;AAAA,8BACV;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,YAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAI,CAACE,KAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIF,IAAI,CAACG,KAAT,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIH,IAAI,CAACI,IAAT,CAHJ,CADJ,CADU;AAAA,SAAd,CAFJ,CADJ,CADJ;AAiBH;AACJ;;;;EA5DiBnB,S;;AA8DtB,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Example1 from './Example1';\n\nclass GetMockData extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error : null,\n            isLoaded : false,\n            posts : []        \n        };\n    }\n    \n    componentDidMount() {\n        // I will use fake api from jsonplaceholder website\n        // this return 100 posts \n        fetch(\"../data/mockData\")\n        .then( response => response.json())\n        .then(\n            // handle the result\n            (result) => {\n                this.setState({\n                    isLoaded : true,\n                    posts : result\n                });\n            },\n            \n            // Handle error \n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            },\n            )\n        }\n\n        render() {\n            const {error, isLoaded, posts} = this.state;\n    \n            if(error){\n                return <div>Error in loading</div>\n            }else if (!isLoaded) {\n                return <div>Loading ...</div>\n            }else{\n                return(\n                    <div>\n                        <ol>\n                        {\n                            posts.map(post => (\n                                <li key={post.id} align=\"start\">\n                                    <div>\n                                        <p>{post.brand}</p>\n                                        <p>{post.title}</p>\n                                        <p>{post.body}</p>\n                                    </div>\n                                </li>\n                            ))\n                        }\n                        </ol>\n                    </div>\n                );\n            }    \n        }\n    }\n    export default GetMockData;"]},"metadata":{},"sourceType":"module"}