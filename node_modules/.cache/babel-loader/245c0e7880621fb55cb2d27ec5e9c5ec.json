{"ast":null,"code":"import _classCallCheck from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shawntaylor/projects/auth/src/components/getMockData.js\";\nimport React, { Component } from 'react';\nimport Example1 from './example1';\n\nvar GetMockData = /*#__PURE__*/function (_Component) {\n  _inherits(GetMockData, _Component);\n\n  function GetMockData(props) {\n    var _this;\n\n    _classCallCheck(this, GetMockData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetMockData).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(GetMockData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // I will use fake api from jsonplaceholder website\n      // this return 100 posts \n      fetch(\"../data/mockData\").then(function (response) {\n        return response.json();\n      }).then( // handle the result\n      function (result) {\n        _this2.setState({\n          isLoaded: true,\n          posts: result\n        });\n      }, // Handle error \n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          posts = _this$state.posts;\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 20\n          }\n        }, \"Error in loading\");\n      } else if (!isLoaded) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }\n        }, \"Loading ...\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"ol\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }, posts.map(function (post) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: post.id,\n            align: \"start\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 41\n            }\n          }, post.brand), /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 41\n            }\n          }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 41\n            }\n          }, post.body)));\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Example1, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n  }]);\n\n  return GetMockData;\n}(Component);\n\nexport default GetMockData;","map":{"version":3,"sources":["/Users/shawntaylor/projects/auth/src/components/getMockData.js"],"names":["React","Component","Example1","GetMockData","props","state","error","isLoaded","posts","fetch","then","response","json","result","setState","map","post","id","brand","title","body"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,W;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAFe;AAOlB;;;;wCAEmB;AAAA;;AAChB;AACA;AACAC,MAAAA,KAAK,CAAC,kBAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,EAGQ;AACA,gBAACG,MAAD,EAAY;AACR,QAAA,MAAI,CAACC,QAAL,CAAc;AACVP,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,KAAK,EAAEK;AAFG,SAAd;AAIH,OATT,EAWQ;AACA,gBAACP,KAAD,EAAW;AACP,QAAA,MAAI,CAACQ,QAAL,CAAc;AACVP,UAAAA,QAAQ,EAAE,IADA;AAEVD,UAAAA,KAAK,EAALA;AAFU,SAAd;AAIH,OAjBT;AAmBH;;;6BAEQ;AAAA;;AAAA,wBAC8B,KAAKD,KADnC;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACoBC,KADpB,eACoBA,KADpB;;AAGL,UAAIF,KAAJ,EAAW;AACP,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,OAFD,MAEO,IAAI,CAACC,QAAL,EAAe;AAClB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH,OAFM,MAEA;AACH,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQC,KAAK,CAACO,GAAN,CAAU,UAAAC,IAAI;AAAA,8BACV;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,YAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAI,CAACE,KAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIF,IAAI,CAACG,KAAT,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIH,IAAI,CAACI,IAAT,CAHJ,CADJ,CADU;AAAA,SAAd,CAFR,CADJ,eAcI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAdJ,CADJ;AAoBH;AACJ;;;;EA/DqBnB,S;;AAiE1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Example1 from './example1';\n\nclass GetMockData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            posts: []\n        };\n    }\n\n    componentDidMount() {\n        // I will use fake api from jsonplaceholder website\n        // this return 100 posts \n        fetch(\"../data/mockData\")\n            .then(response => response.json())\n            .then(\n                // handle the result\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        posts: result\n                    });\n                },\n\n                // Handle error \n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    })\n                },\n            )\n    }\n\n    render() {\n        const { error, isLoaded, posts } = this.state;\n\n        if (error) {\n            return <div>Error in loading</div>\n        } else if (!isLoaded) {\n            return <div>Loading ...</div>\n        } else {\n            return (\n                <div>\n                    <ol>\n                        {\n                            posts.map(post => (\n                                <li key={post.id} align=\"start\">\n                                    <div>\n                                        <p>{post.brand}</p>\n                                        <p>{post.title}</p>\n                                        <p>{post.body}</p>\n                                    </div>\n                                </li>\n                            ))\n                        }\n                    </ol>\n                    <div className=\"\">\n                        <Example1></Example1>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\nexport default GetMockData;"]},"metadata":{},"sourceType":"module"}