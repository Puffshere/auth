{"ast":null,"code":"import _objectSpread from \"/Users/shawntaylor/projects/auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as types from '../actions';\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'You have no knives!  Go buy some!';\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var knifeReducer = action.knifeReducer;\n  console.log(state);\n\n  switch (action.type) {\n    case types.ADD_KNIFE:\n      return _objectSpread({}, state, {\n        knifeReducer: knifeReducer\n      });\n\n    default:\n      return state;\n  }\n}\n;\n\nvar addKnifeText = function addKnifeText(knife) {\n  return {\n    type: ADD_KNIFE,\n    text: knife\n  };\n};\n\nstore.dispatch(addKnifeText(\"Hello!\"));\n\nvar knifeReducer = function knifeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"You have no knives!  Go buy some now!\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_KNIFE:\n      return action.text;\n\n    default:\n      return state;\n  }\n};\n\nvar store = Redux.createStore(knifeReducer);\nconsole.log(store.getState());\nconsole.log(store.getState());","map":{"version":3,"sources":["/Users/shawntaylor/projects/auth/src/reducers/addKnifeReducer.js"],"names":["types","state","action","knifeReducer","console","log","type","ADD_KNIFE","addKnifeText","knife","text","store","dispatch","Redux","createStore","getState"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,YAAvB;AAIA,eAAe,YAA8D;AAAA,MAArDC,KAAqD,uEAA7C,mCAA6C;AAAA,MAARC,MAAQ;AAE3E,MAAMC,YAAY,GAAGD,MAAM,CAACC,YAA5B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,UAAOC,MAAM,CAACI,IAAd;AACE,SAAKN,KAAK,CAACO,SAAX;AACE,+BAAYN,KAAZ;AAAmBE,QAAAA,YAAY,EAAZA;AAAnB;;AACF;AACE,aAAOF,KAAP;AAJJ;AAMD;AAAA;;AACD,IAAMO,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAE7B,SAAO;AACLH,IAAAA,IAAI,EAAEC,SADD;AAELG,IAAAA,IAAI,EAAED;AAFD,GAAP;AAKA,CAPD;;AASAE,KAAK,CAACC,QAAN,CAAeJ,YAAY,CAAC,QAAD,CAA3B;;AAGA,IAAML,YAAY,GAAG,SAAfA,YAAe,GAA6D;AAAA,MAA5DF,KAA4D,uEAApD,uCAAoD;AAAA,MAAXC,MAAW;;AACjF,UAAQA,MAAM,CAACI,IAAf;AAEE,SAAKC,SAAL;AACE,aAAOL,MAAM,CAACQ,IAAd;;AAEF;AACE,aAAOT,KAAP;AANJ;AAQA,CATD;;AAaA,IAAMU,KAAK,GAAGE,KAAK,CAACC,WAAN,CAAkBX,YAAlB,CAAd;AAEAC,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACI,QAAN,EAAZ;AAEAX,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACI,QAAN,EAAZ","sourcesContent":["import * as types from '../actions';\n\n\n\nexport default function(state = 'You have no knives!  Go buy some!', action) {\n\n  const knifeReducer = action.knifeReducer;\n  \n  console.log(state);\n  switch(action.type) {\n    case types.ADD_KNIFE:\n      return { ...state, knifeReducer };\n    default:\n      return state;\n  }\n};\nconst addKnifeText = knife => {\n\n return {\n   type: ADD_KNIFE,\n   text: knife\n };\n\n};\n\nstore.dispatch(addKnifeText(\"Hello!\"));\n\n\nconst knifeReducer = (state = \"You have no knives!  Go buy some now!\", action) => {\n switch (action.type) {\n\n   case ADD_KNIFE:\n     return action.text;\n\n   default:\n     return state;\n }\n};\n\n\n\nconst store = Redux.createStore(knifeReducer);\n\nconsole.log(store.getState());\n\nconsole.log(store.getState());\n\n"]},"metadata":{},"sourceType":"module"}